{"version":3,"sources":["DrawModes.js","ItemList.js","ItemUtils.js","DrawUtils.js","CanvasSize.js","Map.js","images/map_final_al_ankh.jpg","images/map_final_emerald_archipelago.jpg","images/map_final_aestrin.jpg","images/map_final_ocean.jpg","MapImages.js","Planner.js","App.js","reportWebVitals.js","index.js"],"names":["DrawModes","drawTool","setDrawTool","ToggleButtonGroup","value","exclusive","onChange","event","newAlignment","ToggleButton","useStyles","makeStyles","list","ItemList","items","setItems","classes","Card","sx","maxWidth","CardContent","List","className","subheader","ListSubheader","component","map","item","ListItem","secondaryAction","IconButton","onClick","itemToRemove","filter","ListItemText","primary","description","id","CardActions","Button","size","color","nextId","getNextId","directions16","directions32","directionMode","lineStyles","inProgress","line1","width","stroke","dash","line2","showLength","showDirection","default","circleStyles","createLine","start","end","getLineDescription","type","style","createCircle","getCircleDescription","getLineData","dx","dy","length","Math","round","sqrt","pow","angleText","reciprocalAngleText","oh","angle","asin","PI","isNaN","reciprocalAngle","categorizeAngle","mid","drawText","ctx","centerPoint","text","font","measured","measureText","fillStyle","fillRect","fillText","mode","category","floor","scale","setLineStyle","lineWidth","strokeStyle","setLineDash","drawLineSegment","beginPath","moveTo","lineTo","drawCircle","arc","drawTag","location","draw","startPoint","mousePosition","clearRect","canvas","height","drawImage","image","naturalWidth","naturalHeight","scaledWidth","scaledHeight","drawCursorGuides","drawItems","root","appendItem","newItem","scaleCanvasPosition","position","rect","getBoundingClientRect","scaleX","scaleY","parseFloat","toFixed","Map","canvasRef","useRef","useState","setCanvas","context","setContext","setStartPoint","tagDialogOpen","setTagDialogOpen","tagLocation","setTagLocation","tagText","setTagText","update","useEffect","setTimeout","current","getContext","handleTagDialogClose","ref","e","nativeEvent","offsetX","offsetY","newStartPoint","newItems","createItem","onMouseMove","onMouseLeave","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","variant","target","inputProps","autoComplete","DialogActions","substring","disabled","trim","maps","createImage","name","source","Image","src","onload","min","mapItem","find","createMap","push","alAnkhSource","emeraldArchipelagoSource","aestrinSource","oceanSource","container","paddingTop","Planner","navigate","useNavigate","state","isDefault","getDefaultState","setState","params","oldState","queryString","window","search","urlParams","URLSearchParams","get","mapName","data","tabIndex","findIndex","parseParams","useParams","JSZip","loadAsync","base64","then","zip","files","async","fileData","contents","JSON","parse","maxId","key","navigateTo","encodeURIComponent","newState","count","file","stringify","generateAsync","compression","compressionOptions","level","content","AppBar","Toolbar","edge","aria-label","mr","Container","Box","borderBottom","borderColor","marginBottom","Tabs","newIndex","Tab","Grid","spacing","xs","App","basename","index","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kaAgCeA,EAxBG,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAK1B,OACI,eAACC,EAAA,EAAD,CACIC,MAAOH,EACPI,WAAS,EACTC,SARe,SAACC,EAAOC,GAC3BN,EAAYM,IAIZ,UAKI,cAACC,EAAA,EAAD,CAAcL,MAAM,OAApB,SACI,cAAC,IAAD,MAEJ,cAACK,EAAA,EAAD,CAAcL,MAAM,SAApB,SACI,cAAC,IAAD,MAEJ,cAACK,EAAA,EAAD,CAAcL,MAAM,MAApB,SACI,cAAC,IAAD,U,yFCXVM,EAAYC,YAAW,CACzBC,KAAM,KAsDKC,MAlDf,YAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACjBC,EAAUN,IAUhB,OACI,mCACI,eAACO,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAtB,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,UAAWN,EAAQJ,KACnBW,UACI,cAACC,EAAA,EAAD,CAAeC,UAAU,MAAzB,8BAHR,SAQCX,EAAMY,KAAI,SAAAC,GAAI,OACX,cAACC,EAAA,EAAD,CAEIC,gBACI,cAACC,EAAA,EAAD,CAAYC,QAAS,kBApB7BC,EAoB8CL,OAnB9DZ,EAASD,EAAMmB,QAAO,SAAAN,GAAI,OAAIA,IAASK,MADxB,IAACA,GAoBQ,SACI,cAAC,IAAD,MAJZ,SAQI,cAACE,EAAA,EAAD,CAAcC,QAASR,EAAKS,eAPvBT,EAAKU,WAa1B,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUV,QApC5B,WACjBhB,EAAS,KAmCD,2B,8DC1DZ2B,EAAS,EAEAC,EAAY,WACrB,OAAOD,KCDLE,EAAe,CAAC,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,KAAM,OAC7GC,GAAe,CAAC,IAAK,MAAO,MAAO,OAAQ,KAAM,OAAQ,MAAO,MAAO,IAAK,MAAO,MAAO,OAAQ,KAAM,OAAQ,MAAO,MAAO,IAAK,MAAO,MAAO,OAAQ,KAAM,OAAQ,MAAO,MAAO,IAAK,MAAO,MAAO,OAAQ,KAAM,OAAQ,MAAO,OAErOC,GACM,KADNA,GAEM,KAGNC,GAAa,CACfC,WAAY,CACRC,MAAO,CACHC,MAAO,EACPC,OAAQ,YACRC,KAAM,CAAC,GAAI,IAEfC,MAAO,CACHH,MAAO,EACPC,OAAQ,YACRC,KAAM,CAAC,GAAI,IAEfE,YAAY,EACZC,eAAe,GAEnBC,QAAS,CACLP,MAAO,CACHC,MAAO,EACPC,OAAQ,YACRC,KAAM,IAEVC,MAAO,CACHH,MAAO,EACPC,OAAQ,YACRC,KAAM,IAEVE,YAAY,EACZC,eAAe,IAIjBE,GAAe,CACjBT,WAAY,CACRC,MAAO,CACHC,MAAO,EACPC,OAAQ,YACRC,KAAM,CAAC,GAAI,IAEfC,MAAO,CACHH,MAAO,EACPC,OAAQ,YACRC,KAAM,CAAC,GAAI,IAEfE,YAAY,GAEhBE,QAAS,CACLP,MAAO,CACHC,MAAO,EACPC,OAAQ,YACRC,KAAM,IAEVC,MAAO,CACHH,MAAO,EACPC,OAAQ,YACRC,KAAM,IAEVE,YAAY,IAYdI,GAAa,SAAChC,EAAKiC,EAAOC,GAC5B,MAAO,CACHvB,GAAIM,IACJP,YAAayB,GAAmBnC,EAAKiC,EAAOC,GAC5CE,KAAM,OACNH,QACAC,MACAG,MAAOhB,GAAWS,UAIpBQ,GAAe,SAACtC,EAAKiC,EAAOC,GAC9B,MAAO,CACHvB,GAAIM,IACJP,YAAa6B,GAAqBvC,EAAKiC,EAAOC,GAC9CE,KAAM,SACNH,QACAC,MACAG,MAAON,GAAaD,UA0BtBU,GAAc,SAACP,EAAOC,GACxB,IAAMO,EAAKP,EAAI,GAAKD,EAAM,GACpBS,EAAKR,EAAI,GAAKD,EAAM,GACpBU,EAASC,KAAKC,MAAMD,KAAKE,KAAKF,KAAKG,IAAIb,EAAI,GAAKD,EAAM,GAAI,GAAKW,KAAKG,IAAIb,EAAI,GAAKD,EAAM,GAAI,KAE7Fe,EAAY,GACZC,EAAsB,GAE1B,GAAIN,EAAS,EAAG,CACZ,IAAMO,EAAKT,EAAKE,EACZQ,GAAS,IAAMP,KAAKC,MAAsB,IAAhBD,KAAKQ,KAAKF,IAAa,EAAIN,KAAKS,MAAQ,IAClEC,MAAMH,GACNA,EAASjB,EAAI,GAAKD,EAAM,GAAM,GAAK,IAC5BA,EAAM,GAAKC,EAAI,IAAMD,EAAM,GAAKC,EAAI,GAC3CiB,EAAQ,IAAMA,EACPlB,EAAM,GAAKC,EAAI,IAAMD,EAAM,GAAKC,EAAI,KAC3CiB,EAAQ,KAAOA,EAAQ,MAG3B,IAAMI,GAAmBJ,EAAQ,KAAO,IAExCH,EAAYG,EAAQ,SAAQK,GAAgBL,EAAO/B,IAAwB,IAC3E6B,EAAsBM,EAAkB,SAAQC,GAAgBD,EAAiBnC,IAAwB,IAG7G,MAAO,CACHqB,KACAC,KACAC,SACAc,IAAK,CACDxB,EAAM,GAAKW,KAAKC,MAAMJ,EAAK,GAC3BR,EAAM,GAAKW,KAAKC,MAAMH,EAAK,IAE/BM,YACAC,wBAIFS,GAAW,SAACC,EAAKC,EAAaC,GAChCF,EAAIG,KAAO,aACX,IAAMC,EAAWJ,EAAIK,YAAYH,GAEjCF,EAAIM,UAAY,YAChBN,EAAIO,SAASN,EAAY,GAAMG,EAASvC,MAAQ,EAAK,EAAGoC,EAAY,GAAK,GAAIG,EAASvC,MAAQ,GAAI,IAClGmC,EAAIM,UAAY,YAChBN,EAAIQ,SAASN,EAAMD,EAAY,GAAMG,EAASvC,MAAQ,EAAIoC,EAAY,KAGpEJ,GAAkB,SAACL,EAAOiB,GAC5B,GAAIA,IAAShD,GAAsB,CAC/B+B,GAASA,EAAS,OAAa,IAC/B,IAAMkB,EAAWzB,KAAK0B,MAAMnB,EAAK,MACjC,OAAOjC,EAAamD,GACjB,GAAID,IAAShD,GAAsB,CACtC+B,GAASA,EAAS,OAAa,IAC/B,IAAMkB,EAAWzB,KAAK0B,MAAMnB,EAAK,OACjC,OAAOhC,GAAakD,GAExB,MAAO,IAGLlC,GAAqB,SAACnC,EAAKiC,EAAOC,GAAS,IAAD,EACdM,GAAYP,EAAOC,GAAzCS,EADoC,EACpCA,OAAQK,EAD4B,EAC5BA,UAEhB,MAAM,GAAN,OAAUJ,KAAKC,MAAMF,EAAS3C,EAAIuE,OAAlC,uBAAuDvB,IAGrDT,GAAuB,SAACvC,EAAKiC,EAAOC,GAAS,IACvCS,EAAWH,GAAYP,EAAOC,GAA9BS,OAER,MAAM,GAAN,OAAUC,KAAKC,MAAMF,EAAS3C,EAAIuE,OAAlC,eAGEC,GAAe,SAACb,EAAKtB,GACvBsB,EAAIc,UAAYpC,EAAMb,MACtBmC,EAAIe,YAAcrC,EAAMZ,OACxBkC,EAAIgB,YAAYtC,EAAMX,OAGpBkD,GAAkB,SAACjB,EAAK3D,EAAKiC,EAAOC,EAAKG,GAAW,IAAD,EACGG,GAAYP,EAAOC,GAAnES,EAD6C,EAC7CA,OAAQc,EADqC,EACrCA,IAAKT,EADgC,EAChCA,UAAWC,EADqB,EACrBA,oBAE5BZ,EAAMd,QACNiD,GAAab,EAAKtB,EAAMd,OACxBoC,EAAIkB,YACJlB,EAAImB,OAAO7C,EAAM,GAAIA,EAAM,IAC3B0B,EAAIoB,OAAO7C,EAAI,GAAIA,EAAI,IACvByB,EAAIlC,UAGJY,EAAMV,QACN6C,GAAab,EAAKtB,EAAMV,OACxBgC,EAAIkB,YACJlB,EAAImB,OAAO7C,EAAM,GAAIA,EAAM,IAC3B0B,EAAIoB,OAAO7C,EAAI,GAAIA,EAAI,IACvByB,EAAIlC,UAGJkB,EAAS,IAAMN,EAAMR,gBACrB6B,GAASC,EAAK,CAAC1B,EAAM,GAAK,GAAIA,EAAM,GAAK,IAAKgB,GAC9CS,GAASC,EAAK,CAACzB,EAAI,GAAK,GAAIA,EAAI,GAAK,IAAKc,IAG1CX,EAAMT,YACN8B,GAASC,EAAKF,EAAKb,KAAKC,MAAMF,EAAS3C,EAAIuE,OAAS,QAItDS,GAAa,SAACrB,EAAK3D,EAAKiC,EAAOC,EAAKG,GAAW,IACzCM,EAAWH,GAAYP,EAAOC,GAA9BS,OAER6B,GAAab,EAAKtB,EAAMd,OACxBoC,EAAIkB,YACJlB,EAAIsB,IAAIhD,EAAM,GAAIA,EAAM,GAAIU,EAAQ,EAAG,EAAIC,KAAKS,IAChDM,EAAIlC,SAEJ+C,GAAab,EAAKtB,EAAMV,OACxBgC,EAAIkB,YACJlB,EAAIsB,IAAIhD,EAAM,GAAIA,EAAM,GAAIU,EAAQ,EAAG,EAAIC,KAAKS,IAChDM,EAAIlC,SAEJmD,GAAgBjB,EAAK3D,EAAKiC,EAAOC,EAAKG,IAGpC6C,GAAU,SAACvB,EAAKwB,EAAUtB,GAC5BH,GAASC,EAAK,CAACwB,EAAS,GAAK,GAAIA,EAAS,GAAK,IAAKtB,IAmB3CuB,GAAO,SAACzB,EAAK3D,EAAKqF,EAAYC,EAAelG,EAAOb,GACxDoF,IAGLA,EAAI4B,UAAU,EAAG,EAAG5B,EAAI6B,OAAOhE,MAAOmC,EAAI6B,OAAOC,QAGjD9B,EAAI+B,UAAU1F,EAAI2F,MAAO,EAAG,EAAG3F,EAAI4F,aAAc5F,EAAI6F,cAAe,EAAG,EAAG7F,EAAI8F,YAAa9F,EAAI+F,cAE3FT,GArKiB,SAAC3B,EAAK2B,GAC3B3B,EAAIc,UAAY,EAChBd,EAAIe,YAAc,YAClBf,EAAIgB,YAAY,CAAC,IACjBhB,EAAIkB,YACJlB,EAAImB,OAAO,EAAGQ,EAAc,IAC5B3B,EAAIoB,OCrHa,IDqHCO,EAAc,IAChC3B,EAAImB,OAAOQ,EAAc,GAAI,GAC7B3B,EAAIoB,OAAOO,EAAc,GCtHP,KDuHlB3B,EAAIlC,SA6JAuE,CAAiBrC,EAAK2B,GAGtBD,GAAcC,IACG,SAAb/G,EACAqG,GAAgBjB,EAAK3D,EAAKqF,EAAYC,EAAejE,GAAWC,YAC5C,WAAb/C,GACPyG,GAAWrB,EAAK3D,EAAKqF,EAAYC,EAAevD,GAAaT,aAjCvD,SAACqC,EAAK3D,EAAKZ,GACzB,GAAKA,EAAL,CADmC,oBAKlBA,GALkB,IAKnC,2BAAwB,CAAC,IAAhBa,EAAe,QACF,SAAdA,EAAKmC,KACLwC,GAAgBjB,EAAK3D,EAAKC,EAAKgC,MAAOhC,EAAKiC,IAAKjC,EAAKoC,OAChC,WAAdpC,EAAKmC,KACZ4C,GAAWrB,EAAK3D,EAAKC,EAAKgC,MAAOhC,EAAKiC,IAAKjC,EAAKoC,OAC3B,QAAdpC,EAAKmC,MACZ8C,GAAQvB,EAAK1D,EAAKkF,SAAUlF,EAAK4D,OAXN,gCAqCnCoC,CAAUtC,EAAK3D,EAAKZ,KEnRlBJ,GAAYC,YAAW,CAC3BiH,KAAM,GAENV,OAAQ,CACN/F,SAAU,UAIR0G,GAAa,SAAC/G,EAAOgH,GACzB,MAAM,GAAN,mBAAWhH,GAAX,CAAkBgH,KAGdC,GAAsB,SAACb,EAAQc,GACnC,IAAKd,EACH,OAAOc,EAET,IAAMC,EAAOf,EAAOgB,wBACdC,EAASjB,EAAOhE,MAAQ+E,EAAK/E,MAC7BkF,EAASlB,EAAOC,OAASc,EAAKd,OAEpC,MAAO,CACLkB,YAAYL,EAAS,GAAKG,GAAQG,QAAQ,IAC1CD,YAAYL,EAAS,GAAKI,GAAQE,QAAQ,MAqH/BC,OAjHf,YAAkD,IAAnCtI,EAAkC,EAAlCA,SAAUyB,EAAwB,EAAxBA,IAAKZ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7BC,EAAUN,KAEV8H,EAAYC,iBAAO,MAHsB,EAInBC,mBAAS,MAJU,mBAIxCxB,EAJwC,KAIhCyB,EAJgC,OAKjBD,mBAAS,MALQ,mBAKxCE,EALwC,KAK/BC,EAL+B,OAMXH,mBAAS,MANE,mBAMxC3B,EANwC,KAM5B+B,EAN4B,OAOLJ,oBAAS,GAPJ,mBAOxCK,EAPwC,KAOzBC,EAPyB,OAQTN,mBAAS,MARA,mBAQxCO,EARwC,KAQ3BC,EAR2B,OASjBR,mBAAS,IATQ,mBASxCS,EATwC,KAS/BC,EAT+B,KAWzCC,EAAS,SAACtC,EAAYC,EAAelG,GACzCgG,GAAK8B,EAASlH,EAAKqF,EAAYC,EAAelG,EAAOb,IAGvDqJ,qBAAU,WACRD,EAAO,KAAM,KAAMvI,KAClB,CAACY,EAAKZ,EAAOoG,EAAQ0B,IAExBU,qBAAU,WACRC,YAAW,WACTZ,EAAUH,EAAUgB,SACpBX,EAAWL,EAAUgB,QAAQC,WAAW,SACvC,OACF,IAGH,IA+BMC,EAAuB,WAC3BV,GAAiB,IAenB,OACE,sBAAK1H,UAAWN,EAAQ4G,KAAxB,UACE,wBACE+B,IAAKnB,EACLtF,MDrHa,ICsHbiE,ODrHc,ICsHdpF,QArDgB,SAAC6H,GACrB,IAAM5C,EAAgBe,GAAoBb,EAAQ,CAAC0C,EAAEC,YAAYC,QAASF,EAAEC,YAAYE,UACxF,GAAiB,QAAb9J,EAGF,OAFAiJ,EAAelC,QACfgC,GAAiB,GAInB,IAAMgB,EAAgBjD,EAAa,KAAOC,EACpCiD,EAAWlD,EACfc,GAAW/G,EFLS,SAACY,EAAKoC,EAAMH,EAAOC,GACzC,MAAa,SAATE,EACOJ,GAAWhC,EAAKiC,EAAOC,GACd,WAATE,EACAE,GAAatC,EAAKiC,EAAOC,QAD7B,EEEasG,CAAWxI,EAAKzB,EAAU8G,EAAYC,IAAkBlG,EAC5EgI,EAAckB,GACVC,IAAanJ,GACfC,EAASkJ,GAEP/C,GACFmC,EAAOW,EAAehD,EAAeiD,IAsCnCE,YAlCa,SAACP,GAClB,IAAM5C,EAAgBe,GAAoBb,EAAQ,CAAC0C,EAAEC,YAAYC,QAASF,EAAEC,YAAYE,UACpF7C,GACFmC,EAAOtC,EAAYC,EAAelG,IAgChCsJ,aA5Ba,WACjBf,EAAO,KAAM,KAAMvI,IA4BfQ,UAAWN,EAAQkG,SAErB,eAACmD,EAAA,EAAD,CAAQC,KAAMvB,EAAewB,QAASb,EAAtC,UACE,cAACc,EAAA,EAAD,sBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,gFAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPxI,GAAG,OACHyI,MAAM,WACNhH,KAAK,OACLiH,WAAS,EACTC,QAAQ,WACR5K,MAAO+I,EACP7I,SA9BkB,SAACC,GAC3B6I,EAAW7I,EAAM0K,OAAO7K,QA8BhB8K,WAAY,CAAEC,aAAc,YAGhC,eAACC,EAAA,EAAD,WACE,cAAC7I,EAAA,EAAD,CAAQR,QAAS2H,EAAjB,oBACA,cAACnH,EAAA,EAAD,CAAQR,QA5CK,WACnB,IFDsB8E,EAAUtB,EEC1B5D,GFDgBkF,EECCoC,EFDS1D,EECI4D,EFA7B,CACH9G,GAAIM,IACJP,YAAY,QAAD,OAAUmD,EAAK8F,UAAU,EAAG,KAA5B,OAAkC9F,EAAKlB,OAAS,GAAK,MAAQ,GAA7D,KACXP,KAAM,MACN+C,WACAtB,SEJJxE,EAAS8G,GAAW/G,EAAOa,IAE3BqH,GAAiB,GACjBI,EAAW,KAuC0BkC,UAAWnC,GAAqC,IAA1BA,EAAQoC,OAAOlH,OAApE,2BCjJK,OAA0B,8CCA1B,OAA0B,0DCA1B,OAA0B,8CCA1B,OAA0B,4CCKnCmH,GAAO,GAKPC,GAAc,SAACC,EAAMC,GACvB,IAAMtE,EAAQ,IAAIuE,MAsBlB,OArBAvE,EAAMwE,IAAMF,EACZtE,EAAMyE,OAAS,WACX,IAAItE,EAAcH,EAAMC,aACpBa,EAAS,EACTX,EATQ,MAURW,EAVQ,IAUeX,GAC3B,IAAIC,EAAeJ,EAAME,cACrBa,EAAS,EACTX,EAZS,MAaTW,EAbS,IAaeX,GAC5B,IAAIxB,EAAQ3B,KAAKyH,IAAI5D,EAAQC,GACzBnC,EAAQ,IACRuB,GAA4BvB,EAC5BwB,GAA8BxB,GAElC,IAAM+F,EAAUR,GAAKS,MAAK,SAAAtK,GAAI,OAAIA,EAAK+J,OAASA,KAChDM,EAAQ1E,aAAeD,EAAMC,aAC7B0E,EAAQzE,cAAgBF,EAAME,cAC9ByE,EAAQxE,YAAcA,EACtBwE,EAAQvE,aAAeA,GAEpBJ,GAGL6E,GAAY,SAACR,EAAMC,EAAQ1F,GAC7B,MAAO,CACHyF,OACArE,MAAOoE,GAAYC,EAAMC,GACzB1F,QACAnF,MAAO,KAIf0K,GAAKW,KAAKD,GAAU,UAAYE,GAAc,GAAK,MACnDZ,GAAKW,KAAKD,GAAU,sBAAuBG,GAA0B,IAAM,MAC3Eb,GAAKW,KAAKD,GAAU,UAAWI,GAAe,GAAK,MACnDd,GAAKW,KAAKD,GAAU,QAASK,GAAa,IAAM,MAEjCf,U,oBC7BT9K,GAAYC,YAAW,CACzB6L,UAAW,CACPC,WAAY,MAwJLC,OAjHf,WACI,IAAM1L,EAAUN,KACViM,EAAWC,cAFF,EAGWlE,mBAdN,WACpB,IAD0B,EACpBmE,EAAQ,CACVC,WAAW,EACXtB,KAAM,IAHgB,cAKVA,IALU,IAK1B,2BAAsB,CAAC,IAAd9J,EAAa,QAClBmL,EAAMrB,KAAK9J,EAAIgK,MAAQ,IAND,8BAQ1B,OAAOmB,EAM4BE,IAHpB,mBAGRF,EAHQ,KAGDG,EAHC,OAKiBtE,mBAAS,QAL1B,mBAKRzI,EALQ,KAKEC,EALF,KAMT+M,EAzCU,SAACA,EAAQC,GACzB,IAAMC,EAAcC,OAAOvG,SAASwG,OAC9BC,EAAY,IAAIC,gBAAgBJ,GAEtC,IAAKA,GAAeA,EAAY9I,OAAS,IAAMiJ,EAAUE,IAAI,OACzD,MAAO,CACHC,QAAS,UACTC,KAAM,KACNC,SAAU,EACVd,MAAO,MAIf,IAAMhG,EAAWyG,EAAUE,IAAI,OACzBE,EAAOJ,EAAUE,IAAI,QAE3B,MAAO,CACHC,QAAS5G,EACT8G,SAAUnC,GAAKoC,WAAU,SAAAjM,GAAI,OAAIA,EAAK+J,OAAS7E,KAC/C6G,KAAMA,EACNb,MAAOK,GAqBIW,CAAYC,cAAY,KAAMjB,GACvCc,EAAWV,EAAOU,SAExBrE,qBAAU,WACF2D,EAAOS,MAAQT,EAAOS,KAAKnC,OAAOlH,OAAS,GAC3C0J,KAAMC,UAAUf,EAAOS,KAAM,CAAEO,QAAQ,IAAQC,MAAK,SAAUC,GAC1DA,EAAIC,MAAM,cAAcC,MAAM,UAAUH,MAAK,SAAUI,GACnD,IAAMC,EAAWC,KAAKC,MAAMH,GACxBI,EAAQ,EACZ,IAAK,IAAIC,KAAOJ,EAAS/C,KAAM,CAC3B,IAD2B,EACrB1K,EAAQyN,EAAS/C,KAAKmD,GADD,cAEV7N,GAFU,IAE3B,2BAAwB,CAAC,IAAhBa,EAAe,QAChBA,EAAKU,GAAKqM,IACVA,EAAQ/M,EAAKU,KAJM,+BTrE/CK,ES6E0BgM,ET7ER,ES+EF1B,EAASuB,WAItB,IAEH,IAAMK,EAAa,SAACnB,EAASC,GAIrBf,EAHCe,EAGQ,QAAD,OAASD,EAAT,iBAAyBoB,mBAAmBnB,IAF3C,QAAD,OAASD,KAMnB3M,EAAQ+L,EAAMrB,KAAKyB,EAAOQ,SAC1B1M,EAAW,SAACD,GACd,IAAMgO,EAAQ,eAAQjC,GACtBiC,EAAStD,KAAKyB,EAAOQ,SAAW3M,EAChCgO,EAAShC,WAAY,EAErB,IAAIiC,EAAQ,EACZ,IAAK,IAAIJ,KAAOG,EAAStD,KACrBuD,GAASD,EAAStD,KAAKmD,GAAKtK,OAGhC,GAAc,IAAV0K,EACAH,EAAWpD,GAAKmC,GAAUjC,UACvB,CACH,IAAIyC,EAAM,IAAIJ,KACdI,EAAIa,KAAK,aAAcR,KAAKS,UAAUH,IACtCX,EAAIe,cAAc,CACdpL,KAAM,SACNqL,YAAa,UACbC,mBAAoB,CAAEC,MAAO,KAE5BnB,MAAK,SAAUoB,GACZV,EAAWpD,GAAKmC,GAAUjC,KAAM4D,QAShD,OACI,qCACI,iCACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAAC1N,EAAA,EAAD,CAAY2N,KAAK,QAAQhN,MAAM,UAAUiN,aAAW,OAAOxO,GAAI,CAAEyO,GAAI,GAArE,SACI,cAAC,IAAD,MAFR,uCAQR,eAACC,EAAA,EAAD,CAAWtO,UAAWN,EAAQwL,UAA9B,UACI,cAACqD,EAAA,EAAD,CAAK3O,GAAI,CAAE4O,aAAc,EAAGC,YAAa,UAAWC,aAAc,GAAlE,SACI,cAACC,EAAA,EAAD,CAAM7P,MAAOuN,EAAUrN,SAlBf,SAACC,EAAO2P,GAC5BtB,EAAWpD,GAAK0E,GAAUxE,KAAMuB,EAAOS,OAiB3B,SACKlC,GAAK9J,KAAI,SAACC,GAAD,OACN,cAACwO,EAAA,EAAD,CAAqBrF,MAAOnJ,EAAK+J,MAAvB/J,EAAK+J,aAK3B,cAACmE,EAAA,EAAD,CAAK3O,GAAI,CAAE8O,aAAc,GAAzB,SACI,cAAC,EAAD,CAAW/P,SAAUA,EAAUC,YAAaA,MAGhD,eAACkQ,EAAA,EAAD,CAAM5D,WAAS,EAAC6D,QAAS,EAAzB,UACI,cAACD,EAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,EAAf,SACI,cAAC,GAAD,CACIrQ,SAAUA,EACVa,MAAOA,EACPC,SAAUA,EACVW,IAAK8J,GAAKmC,OAGlB,cAACyC,EAAA,EAAD,CAAMzO,MAAI,EAAC2O,GAAI,EAAf,SACI,cAAC,EAAD,CAAUxP,MAAOA,EAAOC,SAAUA,gB,SCtJ3CwP,OAZf,WACE,OACE,qBAAKxM,MAAO,CAAEb,MAAO,OAAQiE,OAAQ,QAArC,SACE,cAAC,KAAD,CAAeqJ,SAAS,sBAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,GAAD,aCE1BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.2523314b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nimport ArchitectureIcon from '@mui/icons-material/Architecture';\r\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\r\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\r\n\r\nconst DrawModes = ({drawTool, setDrawTool}) => {\r\n    const handleDrawTool = (event, newAlignment) => {\r\n        setDrawTool(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <ToggleButtonGroup\r\n            value={drawTool}\r\n            exclusive\r\n            onChange={handleDrawTool}\r\n        >\r\n            <ToggleButton value=\"line\">\r\n                <BorderColorIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"circle\">\r\n                <ArchitectureIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"tag\">\r\n                <LocalOfferIcon />\r\n            </ToggleButton>\r\n        </ToggleButtonGroup>\r\n    );\r\n}\r\n\r\nexport default DrawModes;\r\n","import React from 'react';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { Button, CardActions } from '@mui/material';\r\n\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n    }\r\n});\r\n\r\nfunction ItemList({ items, setItems }) {\r\n    const classes = useStyles();\r\n\r\n    const clearClicked = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    const removeItem = (itemToRemove) => {\r\n        setItems(items.filter(item => item !== itemToRemove));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <CardContent>\r\n                    <List\r\n                        className={classes.list}\r\n                        subheader={\r\n                            <ListSubheader component=\"div\">\r\n                                Navigation items\r\n                            </ListSubheader>\r\n                        }\r\n                    >\r\n                    {items.map(item => (\r\n                        <ListItem\r\n                            key={item.id}\r\n                            secondaryAction={\r\n                                <IconButton onClick={() => removeItem(item)}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            }\r\n                        >\r\n                            <ListItemText primary={item.description} />\r\n                        </ListItem>\r\n                    ))}\r\n\r\n                </List>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={clearClicked}>\r\n                    Clear\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ItemList;","\r\nlet nextId = 1;\r\n\r\nexport const getNextId = () => {\r\n    return nextId++;\r\n};\r\n\r\nexport const setLastId = (lastId) => {\r\n    nextId = lastId + 1;\r\n};\r\n","import { width, height } from './CanvasSize';\r\nimport { getNextId } from './ItemUtils';\r\n\r\nconst directions16 = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\r\nconst directions32 = ['N', 'NbE', 'NNE', 'NEbN', 'NE', 'NEbE', 'ENE', 'EbN', 'E', 'EbS', 'ESE', 'SEbE', 'SE', 'SEbS', 'SSE', 'SbE', 'S', 'SbW', 'SSW', 'SWbS', 'SW', 'SWbW', 'WSW', 'WbS', 'W', 'WbN', 'WNW', 'NWbW', 'NW', 'NWbN', 'NNW', 'NbW'];\r\n\r\nconst directionMode = {\r\n    wind16: '16',\r\n    wind32: '32',\r\n};\r\n\r\nconst lineStyles = {\r\n    inProgress: {\r\n        line1: {\r\n            width: 5,\r\n            stroke: '#00000033',\r\n            dash: [15, 5],\r\n        },\r\n        line2: {\r\n            width: 5,\r\n            stroke: '#FFFFFFDD',\r\n            dash: [15, 5],\r\n        },\r\n        showLength: true,\r\n        showDirection: true,\r\n    },\r\n    default: {\r\n        line1: {\r\n            width: 5,\r\n            stroke: '#00000033',\r\n            dash: [],\r\n        },\r\n        line2: {\r\n            width: 5,\r\n            stroke: '#FFFFFFDD',\r\n            dash: [],\r\n        },\r\n        showLength: true,\r\n        showDirection: false,\r\n    },\r\n};\r\n\r\nconst circleStyles = {\r\n    inProgress: {\r\n        line1: {\r\n            width: 5,\r\n            stroke: '#00000033',\r\n            dash: [15, 5],\r\n        },\r\n        line2: {\r\n            width: 5,\r\n            stroke: '#FFFFFFDD',\r\n            dash: [15, 5],\r\n        },\r\n        showLength: true,\r\n    },\r\n    default: {\r\n        line1: {\r\n            width: 5,\r\n            stroke: '#00000033',\r\n            dash: [],\r\n        },\r\n        line2: {\r\n            width: 5,\r\n            stroke: '#FFFFFFDD',\r\n            dash: [],\r\n        },\r\n        showLength: true,\r\n    },\r\n};\r\n\r\nexport const createItem = (map, type, start, end) => {\r\n    if (type === 'line') {\r\n        return createLine(map, start, end);\r\n    } else if (type === 'circle') {\r\n        return createCircle(map, start, end);\r\n    }\r\n}\r\n\r\nconst createLine = (map, start, end) => {\r\n    return {\r\n        id: getNextId(),\r\n        description: getLineDescription(map, start, end),\r\n        type: 'line',\r\n        start,\r\n        end,\r\n        style: lineStyles.default,\r\n    };\r\n};\r\n\r\nconst createCircle = (map, start, end) => {\r\n    return {\r\n        id: getNextId(),\r\n        description: getCircleDescription(map, start, end),\r\n        type: 'circle',\r\n        start,\r\n        end,\r\n        style: circleStyles.default,\r\n    };\r\n};\r\n\r\nexport const createTag = (location, text) => {\r\n    return {\r\n        id: getNextId(),\r\n        description: `Tag \"${text.substring(0, 20)}${text.length > 20 ? '...' : ''}\"`,\r\n        type: 'tag',\r\n        location,\r\n        text,\r\n    };\r\n};\r\n\r\nconst drawCursorGuides = (ctx, mousePosition) => {\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = \"#FFFFFF33\";\r\n    ctx.setLineDash([1]);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, mousePosition[1]);\r\n    ctx.lineTo(width, mousePosition[1]);\r\n    ctx.moveTo(mousePosition[0], 0);\r\n    ctx.lineTo(mousePosition[0], height);\r\n    ctx.stroke();\r\n};\r\n\r\nconst getLineData = (start, end) => {\r\n    const dx = end[0] - start[0];\r\n    const dy = end[1] - start[1];\r\n    const length = Math.round(Math.sqrt(Math.pow(end[0] - start[0], 2) + Math.pow(end[1] - start[1], 2)));\r\n\r\n    let angleText = '';\r\n    let reciprocalAngleText = '';\r\n\r\n    if (length > 1) {\r\n        const oh = dx / length;\r\n        let angle = (360 + Math.round(Math.asin(oh) * 360 / (2 * Math.PI))) % 360;\r\n        if (isNaN(angle)) {\r\n            angle = (end[0] > start[0]) ? 90 : 270;\r\n        } else if (start[0] < end[0] && start[1] < end[1]) {\r\n            angle = 180 - angle;\r\n        } else if (start[0] > end[0] && start[1] < end[1]) {\r\n            angle = 270 - (angle - 270)\r\n        }\r\n\r\n        const reciprocalAngle = (angle + 180) % 360;\r\n\r\n        angleText = angle + '° (' + categorizeAngle(angle, directionMode.wind16) + ')';\r\n        reciprocalAngleText = reciprocalAngle + '° (' + categorizeAngle(reciprocalAngle, directionMode.wind16) + ')';\r\n    }\r\n\r\n    return {\r\n        dx,\r\n        dy,\r\n        length,\r\n        mid: [\r\n            start[0] + Math.round(dx / 2),\r\n            start[1] + Math.round(dy / 2)\r\n        ],\r\n        angleText,\r\n        reciprocalAngleText\r\n    };\r\n};\r\n\r\nconst drawText = (ctx, centerPoint, text) => {\r\n    ctx.font = \"16px Arial\";\r\n    const measured = ctx.measureText(text);\r\n\r\n    ctx.fillStyle = '#00000066';\r\n    ctx.fillRect(centerPoint[0] - (measured.width / 2) - 5, centerPoint[1] - 18, measured.width + 10, 16 + 10);\r\n    ctx.fillStyle = '#FFFFFFDD';\r\n    ctx.fillText(text, centerPoint[0] - (measured.width / 2), centerPoint[1]);\r\n};\r\n\r\nconst categorizeAngle = (angle, mode) => {\r\n    if (mode === directionMode.wind16) {\r\n        angle = (angle + (22.5 / 2)) % 360;\r\n        const category = Math.floor(angle / (360 / 16));\r\n        return directions16[category];\r\n    } else if (mode === directionMode.wind32) {\r\n        angle = (angle + (22.5 / 4)) % 360;\r\n        const category = Math.floor(angle / (360 / 32));\r\n        return directions32[category];\r\n    }\r\n    return '';\r\n};\r\n\r\nconst getLineDescription = (map, start, end) => {\r\n    const { length, angleText } = getLineData(start, end);\r\n\r\n    return `${Math.round(length * map.scale)} nm line at ${angleText}`;\r\n};\r\n\r\nconst getCircleDescription = (map, start, end) => {\r\n    const { length } = getLineData(start, end);\r\n\r\n    return `${Math.round(length * map.scale)} nm circle`;\r\n};\r\n\r\nconst setLineStyle = (ctx, style) => {\r\n    ctx.lineWidth = style.width;\r\n    ctx.strokeStyle = style.stroke;\r\n    ctx.setLineDash(style.dash);\r\n}\r\n\r\nconst drawLineSegment = (ctx, map, start, end, style) => {\r\n    const { length, mid, angleText, reciprocalAngleText } = getLineData(start, end);\r\n\r\n    if (style.line1) {\r\n        setLineStyle(ctx, style.line1)\r\n        ctx.beginPath();\r\n        ctx.moveTo(start[0], start[1]);\r\n        ctx.lineTo(end[0], end[1]);\r\n        ctx.stroke();\r\n    }\r\n\r\n    if (style.line2) {\r\n        setLineStyle(ctx, style.line2)\r\n        ctx.beginPath();\r\n        ctx.moveTo(start[0], start[1]);\r\n        ctx.lineTo(end[0], end[1]);\r\n        ctx.stroke();\r\n    }\r\n\r\n    if (length > 40 && style.showDirection) {\r\n        drawText(ctx, [start[0] + 20, start[1] + 20], reciprocalAngleText);\r\n        drawText(ctx, [end[0] + 30, end[1] + 30], angleText);\r\n    }\r\n\r\n    if (style.showLength) {\r\n        drawText(ctx, mid, Math.round(length * map.scale) + ' nm');\r\n    }\r\n};\r\n\r\nconst drawCircle = (ctx, map, start, end, style) => {\r\n    const { length } = getLineData(start, end);\r\n\r\n    setLineStyle(ctx, style.line1)\r\n    ctx.beginPath();\r\n    ctx.arc(start[0], start[1], length, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n\r\n    setLineStyle(ctx, style.line2)\r\n    ctx.beginPath();\r\n    ctx.arc(start[0], start[1], length, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n\r\n    drawLineSegment(ctx, map, start, end, style);\r\n};\r\n\r\nconst drawTag = (ctx, location, text) => {\r\n    drawText(ctx, [location[0] + 20, location[1] + 20], text);\r\n};\r\n\r\nconst drawItems = (ctx, map, items) => {\r\n    if (!items) {\r\n        return;\r\n    }\r\n\r\n    for (let item of items) {\r\n        if (item.type === 'line') {\r\n            drawLineSegment(ctx, map, item.start, item.end, item.style);\r\n        } else if (item.type === 'circle') {\r\n            drawCircle(ctx, map, item.start, item.end, item.style);\r\n        } else if (item.type === 'tag') {\r\n            drawTag(ctx, item.location, item.text);\r\n        }\r\n    }\r\n};\r\n\r\nexport const draw = (ctx, map, startPoint, mousePosition, items, drawTool) => {\r\n    if (!ctx) {\r\n        return;\r\n    }\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    // ctx.drawImage(map.image, 0, 0);\r\n    ctx.drawImage(map.image, 0, 0, map.naturalWidth, map.naturalHeight, 0, 0, map.scaledWidth, map.scaledHeight);\r\n\r\n    if (mousePosition) {\r\n        drawCursorGuides(ctx, mousePosition);\r\n    }\r\n\r\n    if (startPoint && mousePosition) {\r\n        if (drawTool === 'line') {\r\n            drawLineSegment(ctx, map, startPoint, mousePosition, lineStyles.inProgress);\r\n        } else if (drawTool === 'circle') {\r\n            drawCircle(ctx, map, startPoint, mousePosition, circleStyles.inProgress);\r\n        }\r\n    }\r\n\r\n    drawItems(ctx, map, items);\r\n};\r\n","export const width = 1000;\r\nexport const height = 1000;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { width, height } from './CanvasSize';\r\nimport { draw, createItem, createTag } from './DrawUtils';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n  },\r\n  canvas: {\r\n    maxWidth: '100%',\r\n  }\r\n});\r\n\r\nconst appendItem = (items, newItem) => {\r\n  return [...items, newItem];\r\n};\r\n\r\nconst scaleCanvasPosition = (canvas, position) => {\r\n  if (!canvas) {\r\n    return position;\r\n  }\r\n  const rect = canvas.getBoundingClientRect();\r\n  const scaleX = canvas.width / rect.width;\r\n  const scaleY = canvas.height / rect.height;\r\n\r\n  return [\r\n    parseFloat((position[0] * scaleX).toFixed(3)), \r\n    parseFloat((position[1] * scaleY).toFixed(3)), \r\n  ];\r\n};\r\n\r\nfunction Map({ drawTool, map, items, setItems }) {\r\n  const classes = useStyles();\r\n\r\n  const canvasRef = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [context, setContext] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [tagDialogOpen, setTagDialogOpen] = useState(false);\r\n  const [tagLocation, setTagLocation] = useState(null);\r\n  const [tagText, setTagText] = useState('');\r\n\r\n  const update = (startPoint, mousePosition, items) => {\r\n    draw(context, map, startPoint, mousePosition, items, drawTool);\r\n  };\r\n\r\n  useEffect(() => {\r\n    update(null, null, items);\r\n  }, [map, items, canvas, context]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCanvas(canvasRef.current);\r\n      setContext(canvasRef.current.getContext('2d'));\r\n    }, 200);\r\n  }, []);\r\n\r\n\r\n  const canvasClicked = (e) => {\r\n    const mousePosition = scaleCanvasPosition(canvas, [e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\r\n    if (drawTool === 'tag') {\r\n      setTagLocation(mousePosition);\r\n      setTagDialogOpen(true);\r\n      return;\r\n    }\r\n\r\n    const newStartPoint = startPoint ? null : mousePosition;\r\n    const newItems = startPoint ?\r\n      appendItem(items, createItem(map, drawTool, startPoint, mousePosition)) : items;\r\n    setStartPoint(newStartPoint);\r\n    if (newItems !== items) {\r\n      setItems(newItems);\r\n    }\r\n    if (canvas) {\r\n      update(newStartPoint, mousePosition, newItems);\r\n    }\r\n  };\r\n\r\n  const mouseMoved = (e) => {\r\n    const mousePosition = scaleCanvasPosition(canvas, [e.nativeEvent.offsetX, e.nativeEvent.offsetY]);\r\n    if (canvas) {\r\n      update(startPoint, mousePosition, items);\r\n    }\r\n  };\r\n\r\n  const mouseLeave = () => {\r\n    update(null, null, items);\r\n  };\r\n\r\n  const handleTagDialogClose = () => {\r\n    setTagDialogOpen(false);\r\n  };\r\n\r\n  const handleTagAdd = () => {\r\n    const item = createTag(tagLocation, tagText);\r\n    setItems(appendItem(items, item));\r\n\r\n    setTagDialogOpen(false);\r\n    setTagText('');\r\n  };\r\n\r\n  const handleTagTextChange = (event) => {\r\n    setTagText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={width}\r\n        height={height}\r\n        onClick={canvasClicked}\r\n        onMouseMove={mouseMoved}\r\n        onMouseLeave={mouseLeave}\r\n        className={classes.canvas}\r\n      />\r\n      <Dialog open={tagDialogOpen} onClose={handleTagDialogClose}>\r\n        <DialogTitle>Add tag</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Type in the text for the tag you would like to appear on the map:\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"text\"\r\n            label=\"Tag text\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={tagText}\r\n            onChange={handleTagTextChange}\r\n            inputProps={{ autoComplete: 'off' }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleTagDialogClose}>Cancel</Button>\r\n          <Button onClick={handleTagAdd} disabled={!tagText || tagText.trim().length === 0}>Add</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","export default __webpack_public_path__ + \"static/media/map_final_al_ankh.70de4685.jpg\";","export default __webpack_public_path__ + \"static/media/map_final_emerald_archipelago.2f524505.jpg\";","export default __webpack_public_path__ + \"static/media/map_final_aestrin.9651b847.jpg\";","export default __webpack_public_path__ + \"static/media/map_final_ocean.917e93d6.jpg\";","import alAnkhSource from './images/map_final_al_ankh.jpg';\r\nimport emeraldArchipelagoSource from './images/map_final_emerald_archipelago.jpg';\r\nimport aestrinSource from './images/map_final_aestrin.jpg';\r\nimport oceanSource from './images/map_final_ocean.jpg';\r\n\r\nconst maps = [];\r\n\r\nconst canvasWidth = 1000;\r\nconst canvasHeight = 1000;\r\n\r\nconst createImage = (name, source) => {\r\n    const image = new Image();\r\n    image.src = source;\r\n    image.onload = () => {\r\n        let scaledWidth = image.naturalWidth;\r\n        let scaleX = 1;\r\n        if (scaledWidth > canvasWidth)\r\n            scaleX = canvasWidth / scaledWidth;\r\n        let scaledHeight = image.naturalHeight;\r\n        let scaleY = 1;\r\n        if (scaledHeight > canvasHeight)\r\n            scaleY = canvasHeight / scaledHeight;\r\n        let scale = Math.min(scaleX, scaleY);\r\n        if (scale < 1) {\r\n            scaledWidth = scaledWidth * scale;\r\n            scaledHeight = scaledHeight * scale;\r\n        }\r\n        const mapItem = maps.find(item => item.name === name);\r\n        mapItem.naturalWidth = image.naturalWidth;\r\n        mapItem.naturalHeight = image.naturalHeight;\r\n        mapItem.scaledWidth = scaledWidth;\r\n        mapItem.scaledHeight = scaledHeight;\r\n    };\r\n    return image;\r\n};\r\n\r\nconst createMap = (name, source, scale) => {\r\n    return {\r\n        name,\r\n        image: createImage(name, source),\r\n        scale,\r\n        items: [],\r\n    };\r\n};\r\n\r\nmaps.push(createMap('Al\\'Ankh', alAnkhSource, 84 / 850));\r\nmaps.push(createMap('Emerald Archipelago', emeraldArchipelagoSource, 111 / 920));\r\nmaps.push(createMap('Aestrin', aestrinSource, 60 / 585));\r\nmaps.push(createMap('Ocean', oceanSource, 891 / 846));\r\n\r\nexport default maps;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SailingIcon from '@mui/icons-material/Sailing';\r\n\r\nimport DrawModes from './DrawModes';\r\nimport ItemList from './ItemList';\r\nimport Map from './Map';\r\nimport maps from './MapImages';\r\n\r\nimport JSZip from 'jszip';\r\nimport { setLastId } from './ItemUtils';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        paddingTop: 64,\r\n    }\r\n});\r\n\r\nconst parseParams = (params, oldState) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n\r\n    if (!queryString || queryString.length < 3 || !urlParams.get('map')) {\r\n        return {\r\n            mapName: 'Al\\'Ankh',\r\n            data: null,\r\n            tabIndex: 0,\r\n            state: null,\r\n        };\r\n    }\r\n\r\n    const location = urlParams.get('map');\r\n    const data = urlParams.get('data');\r\n\r\n    return {\r\n        mapName: location,\r\n        tabIndex: maps.findIndex(item => item.name === location),\r\n        data: data,\r\n        state: oldState,\r\n    }\r\n};\r\n\r\nconst getDefaultState = () => {\r\n    const state = {\r\n        isDefault: true,\r\n        maps: {},\r\n    };\r\n    for (let map of maps) {\r\n        state.maps[map.name] = [];\r\n    }\r\n    return state;\r\n};\r\n\r\nfunction Planner() {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState(getDefaultState());\r\n\r\n    const [drawTool, setDrawTool] = useState('line');\r\n    const params = parseParams(useParams()['*'], state);\r\n    const tabIndex = params.tabIndex;\r\n\r\n    useEffect(() => {\r\n        if (params.data && params.data.trim().length > 0) {\r\n            JSZip.loadAsync(params.data, { base64: true }).then(function (zip) {\r\n                zip.files['state.json'].async('string').then(function (fileData) {\r\n                    const contents = JSON.parse(fileData);\r\n                    let maxId = 0;\r\n                    for (let key in contents.maps) {\r\n                        const items = contents.maps[key];\r\n                        for (let item of items) {\r\n                            if (item.id > maxId) {\r\n                                maxId = item.id;\r\n                            }\r\n                        }\r\n                    }\r\n                    setLastId(maxId);\r\n\r\n                    setState(contents);\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const navigateTo = (mapName, data) => {\r\n        if (!data) {\r\n            navigate(`?map=${mapName}`);\r\n        } else {\r\n            navigate(`?map=${mapName}&data=${encodeURIComponent(data)}`);\r\n        }\r\n    };\r\n\r\n    const items = state.maps[params.mapName];\r\n    const setItems = (items) => {\r\n        const newState = { ...state };\r\n        newState.maps[params.mapName] = items;\r\n        newState.isDefault = false;\r\n\r\n        let count = 0;\r\n        for (let key in newState.maps) {\r\n            count += newState.maps[key].length;\r\n        }\r\n\r\n        if (count === 0) {\r\n            navigateTo(maps[tabIndex].name);\r\n        } else {\r\n            var zip = new JSZip();\r\n            zip.file('state.json', JSON.stringify(newState));\r\n            zip.generateAsync({\r\n                type: 'base64',\r\n                compression: \"DEFLATE\",\r\n                compressionOptions: { level: 9 }\r\n            })\r\n                .then(function (content) {\r\n                    navigateTo(maps[tabIndex].name, content);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleTabChange = (event, newIndex) => {\r\n        navigateTo(maps[newIndex].name, params.data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\r\n                            <SailingIcon />\r\n                        </IconButton>\r\n                        Sailwind Navigation Companion\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </header>\r\n            <Container className={classes.container}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider', marginBottom: 1 }}>\r\n                    <Tabs value={tabIndex} onChange={handleTabChange}>\r\n                        {maps.map((item) => (\r\n                            <Tab key={item.name} label={item.name} />\r\n                        ))}\r\n                    </Tabs>\r\n                </Box>\r\n\r\n                <Box sx={{ marginBottom: 1 }}>\r\n                    <DrawModes drawTool={drawTool} setDrawTool={setDrawTool} />\r\n                </Box>\r\n\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={8}>\r\n                        <Map\r\n                            drawTool={drawTool}\r\n                            items={items}\r\n                            setItems={setItems}\r\n                            map={maps[tabIndex]}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <ItemList items={items} setItems={setItems} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Planner;\r\n","import './App.css';\nimport Planner from './Planner';\n\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <BrowserRouter basename=\"/sailwind-companion\">\n        <Routes>\n          <Route index path=\"*\" element={<Planner />} />\n        </Routes>\n      </BrowserRouter >\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}